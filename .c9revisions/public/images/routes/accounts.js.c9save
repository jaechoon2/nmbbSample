{"ts":1357692115901,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"module.exports = function(app, models) {\n  app.get('/accounts/:id/contacts', function(req, res) {\n    var accountId = req.params.id == 'me'\n                       ? req.session.accountId\n                       : req.params.id;\n    models.Account.findById(accountId, function(account) {\n      res.send(account.contacts);\n    });\n  });\n  \n  app.get('/accounts/:id/activity', function(req, res) {\n    var accountId = req.params.id == 'me'\n                       ? req.session.accountId\n                       : req.params.id;\n    models.Account.findById(accountId, function(account) {\n      res.send(account.activity);\n    });\n  });\n  \n  app.get('/accounts/:id/status', function(req, res) {\n    var accountId = req.params.id == 'me'\n                       ? req.session.accountId\n                       : req.params.id;\n    models.Account.findById(accountId, function(account) {\n      res.send(account.status);\n    });\n  }); \n  \n  app.post('/accounts/:id/status', function(req, res) {\n    var accountId = req.params.id == 'me'\n                       ? req.session.accountId\n                       : req.params.id;\n    models.Account.findById(accountId, function(account) {\n      status = {\n        name: account.name,\n        status: req.param('status', '')\n      };\n      account.status.push(status);  \n  \n      // Push the status to all friends\n      account.activity.push(status);\n      account.save(function (err) {\n        if (err) {\n          console.log('Error saving account: ' + err);\n        } else {\n          app.triggerEvent('event:' + accountId, {\n            from: accountId,\n            data: status,\n            action: 'status'\n          });\n        }\n      });\n    });\n    res.send(200);\n  });  \n \n  app.delete('/accounts/:id/contact', function(req,res) {\n    var accountId = req.params.id == 'me'\n                       ? req.session.accountId\n                       : req.params.id;\n    var contactId = req.param('contactId', null);     \n  \n    // Missing contactId, don't bother going any further\n    if ( null == contactId ) {\n      res.send(400);\n      return;\n    }  \n \n    models.Account.findById(accountId, function(account) {\n      if ( !account ) return;\n      models.Account.findById(contactId, function(contact,err) {\n        if ( !contact ) return;  \n \n        models.Account.removeContact(account, contactId);\n        // Kill the reverse link\n        models.Account.removeContact(contact, accountId);\n      });\n    });\n \n    // Note: Not in callback - this endpoint returns immediately and\n    // processes in the background\n    res.send(200);\n  });\n \n  app.post('/accounts/:id/contact', function(req,res) {\n    var accountId = req.params.id == 'me'\n                       ? req.session.accountId\n                       : req.params.id;\n    var contactId = req.param('contactId', null);\n  \n    // Missing contactId, don't bother going any further\n    if ( null == contactId ) {\n      res.send(400);\n      return;\n    }\n  \n    models.Account.findById(accountId, function(account) {\n      if ( account ) {\n        models.Account.findById(contactId, function(contact) {\n          models.Account.addContact(account, contact);\n  \n          // Make the reverse link\n          models.Account.addContact(contact, account);\n          account.save();\n        });\n      }\n    });\n  \n    // Note: Not in callback - this endpoint returns immediately and\n    // processes in the background\n    res.send(200);\n  });\n  \n  app.get('/accounts/:id', function(req, res) {\n    var accountId = req.params.id == 'me'\n                       ? req.session.accountId\n                       : req.params.id;\n    models.Account.findById(accountId, function(account) {\n      if ( accountId == 'me' || models.Account.hasContact(account, req.session.accountId) ) {\n        account.isFriend = true;\n      }\n      res.send(account);\n    });\n  });\n}"]],"start1":0,"start2":0,"length1":0,"length2":3845}]],"length":3845}
{"contributors":[],"silentsave":false,"ts":1357706628407,"patch":[[{"diffs":[[0,"nt) {\n      "],[1,"var "],[0,"status = {\n "]],"start1":1164,"start2":1164,"length1":24,"length2":28},{"diffs":[[0,"    if ( null =="],[1,"="],[0," contactId ) {\n "]],"start1":2020,"start2":2020,"length1":32,"length2":33}]],"length":3850,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357788565027,"patch":[[{"diffs":[[0,"', null);\n  "],[1," console.log(contactID + 'inside POST /accounts/:id/contact');"],[0,"\n    // Miss"]],"start1":2812,"start2":2812,"length1":24,"length2":86},{"diffs":[[0," null =="],[1,"="],[0," contact"]],"start1":2952,"start2":2952,"length1":16,"length2":17}]],"length":3913,"saved":false}
{"ts":1357788712868,"patch":[[{"diffs":[[0,"actI"],[-1,"D"],[1,"d"],[0," + '"]],"start1":2841,"start2":2841,"length1":9,"length2":9}]],"length":3913,"saved":false}
